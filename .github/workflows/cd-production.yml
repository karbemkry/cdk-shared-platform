name: CD - Production

on:
  release:
    types: [published]

env:
  CDK_DEFAULT_REGION: ${{ secrets.TARGET_AWS_REGION }}
  CDK_DEFAULT_ACCOUNT: ${{ secrets.TARGET_AWS_ACCOUNT }}
  DEPLOY_ENV: Production
  AWS_REGION: eu-west-1

  ROUTE53_HOSTED_ZONE: karel-playground-sandbox.kry.se
  ROUTE53_HOSTED_ZONE_ID: Z018022213Y1JTUCNW907
  ROUTE53_HOSTED_NAME: platform

jobs:
  build-and-deploy:
    name: CD - Production
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://production.example.com
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.3.0'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm

      - name: Cache Pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install CDK
        run: |
          npm install -g aws-cdk

      - name: Install python virtualenv
        run: |
          pip install --upgrade pip
          python3 -m venv .venv
          source .venv/bin/activate

      - name: Install pip requirements for CDK
        run: |
          pip install -r requirements.txt

      - name: Bootstrap CDK
        run: |
          cdk bootstrap

      - name: CDK Diff
        run: |
          cdk diff

      - name: Deploy CDK
        run: |
          cdk deploy --require-approval never "*" \
            --parameters hostedZone=${ROUTE53_HOSTED_ZONE} \
            --parameters hostedZoneId=${ROUTE53_HOSTED_ZONE_ID} \
            --parameters hostedName=${ROUTE53_HOSTED_NAME}