name: CD

on:
  push:
    branches:
      - release

env:
  AWS_REGION: eu-north-1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.3.0'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Configure caches
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Cache Pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # The actual CDK stuff
      - name: Install CDK
        run: |
          npm install -g aws-cdk

      - name: Install python virtualenv
        run: |
          pip install --upgrade pip
          python3 -m venv .venv
          source .venv/bin/activate
          echo "VIRTUAL ENV:" $VIRTUAL_ENV

      - name: Install pip requirements for CDK
        run: |
          pip install -r infrastructure/requirements.txt

      - name: Bootstrap CDK
        working-directory: infrastructure
        run: |
          cdk bootstrap

      - name: Synth CDK
        working-directory: infrastructure
        run: |
          cdk synth
        env:
          CDK_DEFAULT_REGION: ${{ secrets.TARGET_AWS_REGION }}
          CDK_DEFAULT_ACCOUNT: ${{ secrets.TARGET_AWS_ACCOUNT }}

      - name: Deploy CDK
        working-directory: infrastructure
        run: |
          cdk deploy --require-approval never "*"
        env:
          CDK_DEFAULT_REGION: ${{ secrets.TARGET_AWS_REGION }}
          CDK_DEFAULT_ACCOUNT: ${{ secrets.TARGET_AWS_ACCOUNT }}
